@model StoreFront.Data.EF.HeadPhoneStore

@using (Html.BeginForm("", "", FormMethod.Post, new { id = "PublisherCreateForm" }))

{
    @Html.AntiForgeryToken()
    }

    <div class="form-horizontal">
        @*<h4>HeadPhoneStore</h4>
            <hr />*@
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">

            <div class="col-md-4">
                @Html.DropDownList("HeadPhoneType", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.HeadPhoneType, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">

            <div class="col-md-4">
                @Html.EditorFor(model => model.HeadPhonePrice, new { htmlAttributes = new { @class = "form-control", placeholder = "HeadPhonePrice" } })
                @Html.ValidationMessageFor(model => model.HeadPhonePrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            <div class="col-md-4">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isWireless)
                    @Html.ValidationMessageFor(model => model.isWireless, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">

            <div class="col-md-4>
                @Html.EditorFor(model => model.UnitsSold, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UnitsSold, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            <div class="col-md-2">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isInOver)
                    @Html.ValidationMessageFor(model => model.isInOver, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @*<div class="form-group">

            <div class="col-md-2">
                @Html.DropDownList("ColorID", null, htmlAttributes: new { @class = "form-control", placeholder = "ColorID" })
                @Html.ValidationMessageFor(model => model.ColorID, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">

            <div class="col-md-1">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", placeholder = "Description" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            <div class="col-md-1">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isMic)
                    @Html.ValidationMessageFor(model => model.isMic, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @*<div class="form-group">

            <div class="col-md-1">
                @Html.DropDownList("ChargerID", null, htmlAttributes: new { @class = "form-control", placeholder = "ChargerID" })
                @Html.ValidationMessageFor(model => model.ChargerID, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">

            <div class="col-md-1">
                @Html.DropDownList("ShipperID", null, htmlAttributes: new { @class = "form-control", placeholder = "ShipperID" })
                @Html.ValidationMessageFor(model => model.ShipperID, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-1">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isBlueTooth)
                    @Html.ValidationMessageFor(model => model.isBlueTooth, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-1">
                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control", placeholder = "Weight" } })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-1">
                @Html.EditorFor(model => model.Sales, new { htmlAttributes = new { @class = "form-control", placeholder = "Sales" } })
                @Html.ValidationMessageFor(model => model.Sales, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            <div class="col-md-2">
                @Html.DropDownList("StockID", null, htmlAttributes: new { @class = "form-control", placeholder = "StockID" })
                @Html.ValidationMessageFor(model => model.StockID, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-1">
                @*@Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control", placeholder = "Image" } })
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })*@
                <input type="file" name="headPhones" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>    
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
